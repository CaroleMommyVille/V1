imports:
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      
        fallback: "fr_FR"
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    default_locale:  "fr_FR"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true
    templating:
        engines: ['twig']
        assets_version: v1.08

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [  ]
#    #java: /usr/bin/java
#    filters:
#        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"
#        yui_css:
#            jar: "%kernel.root_dir%/Resources/java/yuicompressor.jar"
#            apply_to: "\.css$"
#        yui_js:
#            jar: "%kernel.root_dir%/Resources/java/yuicompressor.jar"
#            apply_to: "\.js$"
# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        logging: false
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                connection:       default
                auto_mapping: true
# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    port:      "%mailer_port%"
    encryption: "%mailer_encryption%"
    spool:     { type: memory }
    logging:   "%kernel.debug%"
# Memcache access
#aequasi_cache:
#    instances:
#        default:
#          persistent: false
#          namespace: mv
#          type: memcached
#          hosts:
#              - { host: localhost, port: 11211 }
#    session:
#        enabled: false
#        instance: ~
#        prefix: session_
#        ttl: ~
#    doctrine:
#        enabled: false
#        metadata:
#            instance: default
#            entity_managers:   [ default ]          # the name of your entity_manager connection
#            document_managers: [ default ]       # the name of your document_manager connection
#        result:
#            instance: default
#            entity_managers:   [ default, read ]  # you may specify multiple entity_managers
#        query:
#            instance: default
#            entity_managers: [ default ]
monolog:
    handlers:
        main:
            type:         fingers_crossed
            action_level: error
            buffer_size: 200
            handler:      nested
        nested:
            type:  stream
            path:  "%kernel.logs_dir%/%kernel.environment%.log"
            level: debug
        console:
            type:  console
sensio_framework_extra:
    view:
        annotations: true

bazinga_geocoder:
    providers:
        openstreetmap:
            locale: ~

knp_gaufrette:
    adapters:
        helios:
            opencloud:
                object_store_id: helios
                container_name: %openstack_container%
        aws:
            amazon_s3:
                amazon_s3_id:   amazonS3
                bucket_name:    %aws_bucket_name%
                options:
                    directory:  %aws_directory%
    filesystems:
        helios:
            adapter:    helios
            alias:      helios_filesystem
        aws:
            adapter:    aws
            alias:      aws_filesystem


services:
    helios:
        class: OpenCloud\OpenStack
        arguments:
          - %openstack_identity_url%
          - {username: %openstack_username%, password: %openstack_password%, tenantName: %openstack_tenant_name%, base_url: '%openstack_base_url%'}
    amazonS3:
        class: AmazonS3
        arguments:
            options:
                key:      '%aws_key%'
                secret:   '%aws_secret_key%'
                base_url: '%aws_base_url%'

oneup_uploader:
    mappings:
        gallery:
            enable_progress: true
            enable_cancelation: true
            frontend: dropzone
            storage:
                type: gaufrette
                filesystem: gaufrette.aws_filesystem